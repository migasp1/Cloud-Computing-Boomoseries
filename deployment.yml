apiVersion: "apps/v1"
kind: Deployment
metadata:
  name: disney
  namespace: default
  labels:
    app: disney
spec:
  strategy:
    type: Recreate
  replicas: 1
  selector:
    matchLabels:
      app: disney
  template:
    metadata:
      labels:
        app: disney
    spec:
      serviceAccountName: default
      containers:
      - name: disney
        imagePullPolicy: Always
        image: "eu.gcr.io/cn-boomoseries-353312/disneymicroservice:latest"
        ports:
        - containerPort: 80
        - containerPort: 443
        env:
        - name: ConnectionStrings__DefaultConnection
          value: "Server=172.28.144.3; Initial Catalog=DisneyDB;User Id=sqlserver;Password=@|tUIyhyun<+^oT{;" 
---
apiVersion: v1
kind: Service
metadata:
  name: disney
spec:
  selector:
    app: disney
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 80
  - name: https
    protocol: TCP
    port: 443
    targetPort: 443
  
---
apiVersion: "apps/v1"
kind: Deployment
metadata:
  name: series
  namespace: default
  labels:
    app: series
spec:
  strategy:
    type: Recreate
  replicas: 1
  selector:
    matchLabels:
      app: series
  template:
    metadata:
      labels:
        app: series
    spec:
      serviceAccountName: default
      containers:
      - name: series
        imagePullPolicy: Always
        image: "eu.gcr.io/cn-boomoseries-353312/seriesmicroservice:latest"
        ports:
        - containerPort: 80
        - containerPort: 443
        env:
        - name: NETFLIX_HOST
          value: "http://netflix/api/v1/Netflix/series"
        - name: AMAZON_HOST
          value: "http://amazon/api/v1/Amazon/series"
        - name: DISNEY_HOST
          value: "http://disney/api/v1/Disney/series"
        - name: IMDB_HOST
          value: "http://imdb/api/v1/IMDB/series"
---
apiVersion: v1
kind: Service
metadata:
  name: series
spec:
  selector:
    app: series
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 80
  - name: https
    protocol: TCP
    port: 443
    targetPort: 443
---
apiVersion: "apps/v1"
kind: Deployment
metadata:
  name: amazon
  namespace: default
  labels:
    app: amazon
spec:
  strategy:
    type: Recreate
  replicas: 1
  selector:
    matchLabels:
      app: amazon
  template:
    metadata:
      labels:
        app: amazon
    spec:
      serviceAccountName: default
      containers:
      - name: amazon
        imagePullPolicy: Always
        image: "eu.gcr.io/cn-boomoseries-353312/amazonmicroservice:latest"
        ports:
        - containerPort: 80
        - containerPort: 443
        env:
        - name: ConnectionStrings__DefaultConnection
          value: "Server=172.28.144.3; Initial Catalog=AmazonDB;User Id=sqlserver;Password=@|tUIyhyun<+^oT{;"  
---
apiVersion: v1
kind: Service
metadata:
  name: amazon
spec:
  selector:
    app: amazon
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 80
  - name: https
    protocol: TCP
    port: 443
    targetPort: 443
---
apiVersion: "apps/v1"
kind: Deployment
metadata:
  name: books
  namespace: default
  labels:
    app: books
spec:
  strategy:
    type: Recreate
  replicas: 1
  selector:
    matchLabels:
      app: books
  template:
    metadata:
      labels:
        app: books
    spec:
      serviceAccountName: default
      containers:
      - name: books
        imagePullPolicy: Always
        image: "eu.gcr.io/cn-boomoseries-353312/booksmicroservice:latest"
        ports:
        - containerPort: 80
        - containerPort: 443
        env:
        - name: GOODREADS_HOST
          value: "http://goodreads/api/v1/GoodReads/books"
---
apiVersion: v1
kind: Service
metadata:
  name: books
spec:
  selector:
    app: books
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 80
  - name: https
    protocol: TCP
    port: 443
    targetPort: 443
---
apiVersion: "apps/v1"
kind: "Deployment"
metadata:
  name: imdb
  namespace: default
  labels:
    app: imdb
spec:
  strategy:
    type: Recreate
  replicas: 1
  selector:
    matchLabels:
      app: imdb
  template:
    metadata:
      labels:
        app: imdb
    spec:
      serviceAccountName: default
      containers:
      - name: imdb
        imagePullPolicy: Always
        image: "eu.gcr.io/cn-boomoseries-353312/imdbmicroservice:latest"
        ports:
        - containerPort: 80
        - containerPort: 443
        env:
        - name: ConnectionStrings__DefaultConnection
          value: "Server=172.28.144.3; Initial Catalog=IMDBDB;User Id=sqlserver;Password=@|tUIyhyun<+^oT{;"  
---
apiVersion: v1
kind: Service
metadata:
  name: imdb
spec:
  selector:
    app: imdb
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 80
  - name: https
    protocol: TCP
    port: 443
    targetPort: 443
---
apiVersion: "apps/v1"
kind: Deployment
metadata:
  name: movies
  namespace: default
  labels:
    app: movies
spec:
  strategy:
    type: Recreate
  replicas: 1
  selector:
    matchLabels:
      app: movies
  template:
    metadata:
      labels:
        app: movies
    spec:
      serviceAccountName: default
      containers:
      - name: movies
        imagePullPolicy: Always
        image: "eu.gcr.io/cn-boomoseries-353312/moviesmicroservice:latest"
        ports:
        - containerPort: 80
        - containerPort: 443
        env:
        - name: NETFLIX_HOST
          value: "http://netflix/api/v1/Netflix/movies"
        - name: AMAZON_HOST
          value: "http://amazon/api/v1/Amazon/movies"
        - name: DISNEY_HOST
          value: "http://disney/api/v1/Disney/movies"
        - name: IMDB_HOST
          value: "http://imdb/api/v1/IMDB/movies"
---
apiVersion: v1
kind: Service
metadata:
  name: movies
spec:
  selector:
    app: movies
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 80
  - name: https
    protocol: TCP
    port: 443
    targetPort: 443
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: orchauth
  namespace: default
  labels:
    app: orchauth
spec:
  strategy:
    type: Recreate
  replicas: 1
  selector:
    matchLabels:
      app: orchauth
  template:
    metadata:
      labels:
        app: orchauth
    spec:
      serviceAccountName: default
      containers:
      - name: orchauth
        imagePullPolicy: Always
        image: "eu.gcr.io/cn-boomoseries-353312/orchmicroservice:latest"
        ports:
        - containerPort: 80
        - containerPort: 443
        env:
        - name: SEARCH_HOST
          value: "http://search/api/v1/Search"
        - name: USERS_HOST
          value: "http://users/Users"
        - name: PREFS_HOST
          value: "http://prefs/UserPreferences/Favorites"
        - name: "Logging__LogLevel__Default"
          value: "Information"          
      readinessProbe:
        initialDelaySeconds: 5
        periodSeconds: 15
        timeoutSeconds: 2
        successThreshold: 1
        failureThreshold: 5
        httpGet:
          scheme: HTTP
          path: /index.html
          port: 80    
      livenessProbe:
        initialDelaySeconds: 5
        periodSeconds: 15
        timeoutSeconds: 1
        successThreshold: 1
        failureThreshold: 5
        httpGet:
          scheme: HTTP
          path: /index.html
          port: 80                       
---
apiVersion: v1
kind: Service
metadata:
  name: orchauth
spec:
  selector:
    app: orchauth
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 80
  - name: https
    protocol: TCP
    port: 443
    targetPort: 443
  type: LoadBalancer
---
apiVersion: "apps/v1"
kind: Deployment
metadata:
  name: prefs
  namespace: default
  labels:
    app: prefs
spec:
  strategy:
    type: Recreate
  replicas: 1
  selector:
    matchLabels:
      app: prefs
  template:
    metadata:
      labels:
        app: prefs
    spec:
      serviceAccountName: default
      containers:
      - name: prefs
        imagePullPolicy: Always
        image: "eu.gcr.io/cn-boomoseries-353312/prefsmicroservice:latest"
        ports:
        - containerPort: 80
        - containerPort: 443
        env:
        - name: ConnectionStrings__DefaultConnection
          value: "Server=172.28.144.3; Initial Catalog=PrefsDB;User Id=sqlserver;Password=@|tUIyhyun<+^oT{;"  
---
apiVersion: v1
kind: Service
metadata:
  name: prefs
spec:
  selector:
    app: prefs
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 80
  - name: https
    protocol: TCP
    port: 443
    targetPort: 443
---
apiVersion: "apps/v1"
kind: Deployment
metadata:
  name: search
  namespace: default
  labels:
    app: search
spec:
  strategy:
    type: Recreate
  replicas: 1
  selector:
    matchLabels:
      app: search
  template:
    metadata:
      labels:
        app: search
    spec:
      serviceAccountName: default
      containers:
      - name: search
        imagePullPolicy: Always
        image: "eu.gcr.io/cn-boomoseries-353312/searchmicroservice:latest"
        ports:
        - containerPort: 80
        - containerPort: 443
        env:
        - name: MOVIES_HOST
          value: "http://movies/api/v1/Movies"
        - name: SERIES_HOST
          value: "http://series/api/v1/Series"
        - name: BOOKS_HOST
          value: "http://books/api/v1/Books"
---
apiVersion: v1
kind: Service
metadata:
  name: search
spec:
  selector:
    app: search
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 80
  - name: https
    protocol: TCP
    port: 443
    targetPort: 443
---
apiVersion: "apps/v1"
kind: Deployment
metadata:
  name: "users"
  namespace: default
  labels:
    app: users
spec:
  strategy:
    type: Recreate
  replicas: 1
  selector:
    matchLabels:
      app: users
  template:
    metadata:
      labels:
        app: users
    spec:
      serviceAccountName: default
      containers:
      - name: users
        imagePullPolicy: Always
        image: "eu.gcr.io/cn-boomoseries-353312/usersmicroservice:latest"
        ports:
        - containerPort: 80
        - containerPort: 443
        env:
        - name: ConnectionStrings__DefaultConnection
          value: "Server=172.28.144.3; Initial Catalog=UsersDB;User Id=sqlserver;Password=@|tUIyhyun<+^oT{;"  
---
apiVersion: v1
kind: Service
metadata:
  name: users
spec:
  selector:
    app: users
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 80
  - name: https
    protocol: TCP
    port: 443
    targetPort: 443
---
apiVersion: "apps/v1"
kind: Deployment
metadata:
  name: goodreads
  namespace: default
  labels:
    app: goodreads
spec:
  strategy:
    type: Recreate
  replicas: 1
  selector:
    matchLabels:
      app: goodreads
  template:
    metadata:
      labels:
        app: goodreads
    spec:
      serviceAccountName: default
      containers:
      - name: goodreads
        imagePullPolicy: Always
        image: "eu.gcr.io/cn-boomoseries-353312/goodreadsmicroservice:latest"
        ports:
        - containerPort: 80
        - containerPort: 443
        env:
        - name: ConnectionStrings__DefaultConnection
          value: "Server=172.28.144.3; Initial Catalog=GoodReadsDB;User Id=sqlserver;Password=@|tUIyhyun<+^oT{;"  
---
apiVersion: v1
kind: Service
metadata:
  name: goodreads
spec:
  selector:
    app: goodreads
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 80
  - name: https
    protocol: TCP
    port: 443
    targetPort: 443
---
apiVersion: "apps/v1"
kind: Deployment
metadata:
  name: netflix
  namespace: default
  labels:
    app: netflix
spec:
  strategy:
    type: Recreate
  replicas: 1
  selector:
    matchLabels:
      app: netflix
  template:
    metadata:
      labels:
        app: netflix
    spec:
      serviceAccountName: default
      containers:
      - name: netflix
        imagePullPolicy: Always
        image: "eu.gcr.io/cn-boomoseries-353312/netflixmicroservice:latest"
        ports:
        - containerPort: 80
        - containerPort: 443
        env:
        - name: ConnectionStrings__DefaultConnection
          value: "Server=172.28.144.3; Initial Catalog=NetflixDB;User Id=sqlserver;Password=@|tUIyhyun<+^oT{;"  
---
apiVersion: v1
kind: Service
metadata:
  name: netflix
spec:
  selector:
    app: netflix
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 80
  - name: https
    protocol: TCP
    port: 443
    targetPort: 443
