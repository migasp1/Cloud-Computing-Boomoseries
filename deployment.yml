---
apiVersion: "v1"
kind: "ConfigMap"
metadata:
  name: "boomoseries-api"
  namespace: "default"
  labels:
    app: "boomoseries"
data:
  DISNEY_HOST: "disney"
  SERIES_HOST: "series"
  AMAZON_HOST: "amazon"
  BOOKS_HOST: "books"
  IMDB_HOST: "imdb"
  MOVIES_HOST: "movies"
  ORCHAUTH_HOST: "orchauth"
  PREFS_HOST: "prefs"
  SEARCH_HOST: "search"
  USERS_HOST: "users"
  GOODREADS_HOST: "goodreads"
  NETFLIX_HOST: "netflix"
  
---
apiVersion: "apps/v1"
kind: "Deployment"
metadata:
  name: "disney"
  namespace: "default"
  labels:
    app: "disney"
spec:
  strategy:
    type: Recreate
  replicas: 2
  selector:
    matchLabels:
      app: "disney"
  template:
    metadata:
      labels:
        app: "disney"
    spec:
      serviceAccountName: default
#      terminationGracePeriodSeconds: 5
      containers:
      - name: "disney"
        image: "eu.gcr.io/boomoseries-api/disneymicroservice"
        ports:
        - containerPort: 80
#        readinessProbe:
#          periodSeconds: 5
#          exec:
#            command: ["/bin/grpc_health_probe", "-addr=:50052"]
#        livenessProbe:
#          periodSeconds: 5
#          exec:
#            command: ["/bin/grpc_health_probe", "-addr=:50052"]
---
apiVersion: v1
kind: Service
metadata:
  name: disney
spec:
  #  type: ClusterIP
  selector:
    app: disney
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 80
---
apiVersion: "apps/v1"
kind: "Deployment"
metadata:
  name: "series"
  namespace: "default"
  labels:
    app: "series"
spec:
  strategy:
    type: Recreate
  replicas: 2
  selector:
    matchLabels:
      app: "series"
  template:
    metadata:
      labels:
        app: "series"
    spec:
      serviceAccountName: default
#      terminationGracePeriodSeconds: 5
      containers:
      - name: "series"
        image: "eu.gcr.io/boomoseries-api/seriesmicroservice"
        ports:
        - containerPort: 80
#        readinessProbe:
#          periodSeconds: 5
#          exec:
#            command: ["/bin/grpc_health_probe", "-addr=:50055"]
#        livenessProbe:
#          periodSeconds: 5
#          exec:
#            command: ["/bin/grpc_health_probe", "-addr=:50055"]
        env:
        - name: "NETFLIX_HOST"
          value: http://netflix.default
        - name: "AMAZON_HOST"
          value: http://amazon.default
        - name: "DISNEY_HOST"
          value: http://disney.default
        - name: "IMDB_HOST"
          value: http://imdb.default
---
apiVersion: v1
kind: Service
metadata:
  name: series
spec:
  #  type: ClusterIP
  selector:
    app: series
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 80
---
apiVersion: "apps/v1"
kind: "Deployment"
metadata:
  name: "amazon"
  namespace: "default"
  labels:
    app: "amazon"
spec:
  strategy:
    type: Recreate
  replicas: 2
  selector:
    matchLabels:
      app: "amazon"
  template:
    metadata:
      labels:
        app: "amazon"
    spec:
      serviceAccountName: default
#      terminationGracePeriodSeconds: 5
      containers:
      - name: "amazon"
        image: "eu.gcr.io/boomoseries-api/amazonmicroservice"
        ports:
        - containerPort: 80
#        readinessProbe:
#          periodSeconds: 5
#          exec:
#           command: ["/bin/grpc_health_probe", "-addr=:50051"]
#        livenessProbe:
#          periodSeconds: 5
#          exec:
#            command: ["/bin/grpc_health_probe", "-addr=:50051"]
---
apiVersion: v1
kind: Service
metadata:
  name: amazon
spec:
  #  type: ClusterIP
  selector:
    app: amazon
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 80
---
apiVersion: "apps/v1"
kind: "Deployment"
metadata:
  name: "books"
  namespace: "default"
  labels:
    app: "books"
spec:
  strategy:
    type: Recreate
  replicas: 2
  selector:
    matchLabels:
      app: "books"
  template:
    metadata:
      labels:
        app: "books"
    spec:
      serviceAccountName: default
#      terminationGracePeriodSeconds: 5
      containers:
      - name: "books"
        image: "eu.gcr.io/boomoseries-api/booksmicroservice"
        ports:
        - containerPort: 80
#        readinessProbe:
#          periodSeconds: 5
#          exec:
#            command: ["/bin/grpc_health_probe", "-addr=:50055"]
#        livenessProbe:
#          periodSeconds: 5
#          exec:
#            command: ["/bin/grpc_health_probe", "-addr=:50055"]
        env:
        - name: "GOODREADS_HOST"
          value: http://goodreads.default
---
apiVersion: v1
kind: Service
metadata:
  name: books
spec:
  #  type: ClusterIP
  selector:
    app: books
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 80
---
apiVersion: "apps/v1"
kind: "Deployment"
metadata:
  name: "imdb"
  namespace: "default"
  labels:
    app: "imdb"
spec:
  strategy:
    type: Recreate
  replicas: 2
  selector:
    matchLabels:
      app: "imdb"
  template:
    metadata:
      labels:
        app: "imdb"
    spec:
      serviceAccountName: default
#      terminationGracePeriodSeconds: 5
      containers:
      - name: "imdb"
        image: "eu.gcr.io/boomoseries-api/imdbmicroservice"
        ports:
        - containerPort: 80
#        readinessProbe:
#          periodSeconds: 5
#          exec:
#            command: ["/bin/grpc_health_probe", "-addr=:50050"]
#        livenessProbe:
#          periodSeconds: 5
#          exec:
#            command: ["/bin/grpc_health_probe", "-addr=:50050"]
---
apiVersion: v1
kind: Service
metadata:
  name: imdb
spec:
  #  type: ClusterIP
  selector:
    app: imdb
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 80
---
apiVersion: "apps/v1"
kind: "Deployment"
metadata:
  name: "movies"
  namespace: "default"
  labels:
    app: "movies"
spec:
  strategy:
    type: Recreate
  replicas: 2
  selector:
    matchLabels:
      app: "movies"
  template:
    metadata:
      labels:
        app: "movies"
    spec:
      serviceAccountName: default
#      terminationGracePeriodSeconds: 5
      containers:
      - name: "movies"
        image: "eu.gcr.io/boomoseries-api/moviesmicroservice"
        ports:
        - containerPort: 80
#        readinessProbe:
#          periodSeconds: 5
#          exec:
#            command: ["/bin/grpc_health_probe", "-addr=:50053"]
#        livenessProbe:
#          periodSeconds: 5
#          exec:
#            command: ["/bin/grpc_health_probe", "-addr=:50053"]
        env:
        - name: "NETFLIX_HOST"
          value: http://netflix.default
        - name: "AMAZON_HOST"
          value: http://amazon.default
        - name: "DISNEY_HOST"
          value: http://disney.default
        - name: "IMDB_HOST"
          value: http://imdb.default
---
apiVersion: v1
kind: Service
metadata:
  name: movies
spec:
  #  type: ClusterIP
  selector:
    app: movies
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 80
---
apiVersion: "apps/v1"
kind: "Deployment"
metadata:
  name: "orchauth"
  namespace: "default"
  labels:
    app: "orchauth"
spec:
  strategy:
    type: Recreate
  replicas: 2
  selector:
    matchLabels:
      app: "orchauth"
  template:
    metadata:
      labels:
        app: "orchauth"
    spec:
      serviceAccountName: default
#      terminationGracePeriodSeconds: 5
      containers:
      - name: "orchauth"
        image: "eu.gcr.io/boomoseries-api/orchmicroservice"
        ports:
        - containerPort: 80
#        readinessProbe:
#          periodSeconds: 5
#          exec:
#            command: ["/bin/grpc_health_probe", "-addr=:50053"]
#        livenessProbe:
#          periodSeconds: 5
#          exec:
#            command: ["/bin/grpc_health_probe", "-addr=:50053"]
        env:
        - name: "SEARCH_HOST"
          value: http://search.default
        - name: "USERS_HOST"
          value: http://users.default
        - name: "PREFS_HOST"
          value: http://prefs.default
---
apiVersion: v1
kind: Service
metadata:
  name: orchauth
spec:
  #  type: ClusterIP
  selector:
    app: orchauth
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 80
---
apiVersion: "apps/v1"
kind: "Deployment"
metadata:
  name: "prefs"
  namespace: "default"
  labels:
    app: "prefs"
spec:
  strategy:
    type: Recreate
  replicas: 2
  selector:
    matchLabels:
      app: "prefs"
  template:
    metadata:
      labels:
        app: "prefs"
    spec:
      serviceAccountName: default
#      terminationGracePeriodSeconds: 5
      containers:
      - name: "prefs"
        image: "eu.gcr.io/boomoseries-api/prefsmicroservice"
        ports:
        - containerPort: 80
#        readinessProbe:
#          periodSeconds: 5
#          exec:
#            command: ["/bin/grpc_health_probe", "-addr=:50050"]
#        livenessProbe:
#          periodSeconds: 5
#          exec:
#            command: ["/bin/grpc_health_probe", "-addr=:50050"]
---
apiVersion: v1
kind: Service
metadata:
  name: prefs
spec:
  #  type: ClusterIP
  selector:
    app: prefs
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 80
---
apiVersion: "apps/v1"
kind: "Deployment"
metadata:
  name: "search"
  namespace: "default"
  labels:
    app: "search"
spec:
  strategy:
    type: Recreate
  replicas: 2
  selector:
    matchLabels:
      app: "search"
  template:
    metadata:
      labels:
        app: "search"
    spec:
      serviceAccountName: default
#      terminationGracePeriodSeconds: 5
      containers:
      - name: "search"
        image: "eu.gcr.io/boomoseries-api/searchmicroservice"
        ports:
        - containerPort: 80
#        readinessProbe:
#          periodSeconds: 5
#          exec:
#            command: ["/bin/grpc_health_probe", "-addr=:50053"]
#        livenessProbe:
#          periodSeconds: 5
#          exec:
#            command: ["/bin/grpc_health_probe", "-addr=:50053"]
        env:
        - name: "MOVIES_HOST"
          value: http://movies.default
        - name: "SERIES_HOST"
          value: http://series.default
        - name: "BOOKS_HOST"
          value: http://books.default
---
apiVersion: v1
kind: Service
metadata:
  name: search
spec:
  #  type: ClusterIP
  selector:
    app: search
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 80
---
apiVersion: "apps/v1"
kind: "Deployment"
metadata:
  name: "users"
  namespace: "default"
  labels:
    app: "users"
spec:
  strategy:
    type: Recreate
  replicas: 2
  selector:
    matchLabels:
      app: "users"
  template:
    metadata:
      labels:
        app: "users"
    spec:
      serviceAccountName: default
#      terminationGracePeriodSeconds: 5
      containers:
      - name: "users"
        image: "eu.gcr.io/boomoseries-api/usersmicroservice"
        ports:
        - containerPort: 80
#        readinessProbe:
#          periodSeconds: 5
#          exec:
#            command: ["/bin/grpc_health_probe", "-addr=:50050"]
#        livenessProbe:
#          periodSeconds: 5
#          exec:
#            command: ["/bin/grpc_health_probe", "-addr=:50050"]
---
apiVersion: v1
kind: Service
metadata:
  name: users
spec:
  #  type: ClusterIP
  selector:
    app: users
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 80
---
apiVersion: "apps/v1"
kind: "Deployment"
metadata:
  name: "goodreads"
  namespace: "default"
  labels:
    app: "goodreads"
spec:
  strategy:
    type: Recreate
  replicas: 2
  selector:
    matchLabels:
      app: "goodreads"
  template:
    metadata:
      labels:
        app: "goodreads"
    spec:
      serviceAccountName: default
#      terminationGracePeriodSeconds: 5
      containers:
      - name: "goodreads"
        image: "eu.gcr.io/boomoseries-api/goodreadsmicroservice"
        ports:
        - containerPort: 80
#        readinessProbe:
#          periodSeconds: 5
#          exec:
#            command: ["/bin/grpc_health_probe", "-addr=:50050"]
#        livenessProbe:
#          periodSeconds: 5
#          exec:
#            command: ["/bin/grpc_health_probe", "-addr=:50050"]
---
apiVersion: v1
kind: Service
metadata:
  name: goodreads
spec:
  #  type: ClusterIP
  selector:
    app: goodreads
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 80
---
apiVersion: "apps/v1"
kind: "Deployment"
metadata:
  name: "netflix"
  namespace: "default"
  labels:
    app: "netflix"
spec:
  strategy:
    type: Recreate
  replicas: 2
  selector:
    matchLabels:
      app: "netflix"
  template:
    metadata:
      labels:
        app: "netflix"
    spec:
      serviceAccountName: default
#      terminationGracePeriodSeconds: 5
      containers:
      - name: "netflix"
        image: "eu.gcr.io/boomoseries-api/netflixmicroservice"
        ports:
        - containerPort: 80
#        readinessProbe:
#          periodSeconds: 5
#          exec:
#            command: ["/bin/grpc_health_probe", "-addr=:50050"]
#        livenessProbe:
#          periodSeconds: 5
#          exec:
#            command: ["/bin/grpc_health_probe", "-addr=:50050"]
---
apiVersion: v1
kind: Service
metadata:
  name: netflix
spec:
  #  type: ClusterIP
  selector:
    app: netflix
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 80
